name: Deploy All (Strapi + Next.js)

on:
  push:
    branches: [ main, dev ]
    paths:
      - 'package.json'
      - 'README.md'
      - 'scripts/**'
      - '.github/workflows/deploy-all.yml'

jobs:
  deploy-strapi:
    runs-on: ubuntu-latest
    name: Deploy Strapi to VPS
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT || 22 }}
        script: |
          cd ${{ secrets.PROJECT_PATH || '/opt/launchpad' }}
          
          # Determine branch and environment
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            BRANCH="main"
            ENV="production"
            COMPOSE_FILE="docker-compose.prod.yml"
          else
            BRANCH="dev"
            ENV="development"
            COMPOSE_FILE="docker-compose.dev.yml"
          fi
          
          git pull origin $BRANCH
          docker-compose -f $COMPOSE_FILE down
          docker-compose -f $COMPOSE_FILE up -d --build
          sleep 30
          # Check if Strapi is running (different ports for dev/prod)
          if [ "$ENV" = "production" ]; then
            HEALTH_URL="http://localhost:1337/health"
          else
            HEALTH_URL="http://localhost:1338/health"
          fi
          
          if curl -f $HEALTH_URL > /dev/null 2>&1; then
            echo "‚úÖ Strapi deployment successful for $ENV environment!"
          else
            echo "‚ùå Strapi health check failed"
            docker-compose -f $COMPOSE_FILE logs strapi
            exit 1
          fi
          docker image prune -f

  deploy-nextjs:
    runs-on: ubuntu-latest
    name: Deploy Next.js to Vercel
    needs: deploy-strapi
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'yarn'
        cache-dependency-path: next/yarn.lock

    - name: Install dependencies
      working-directory: ./next
      run: yarn install --frozen-lockfile

    - name: Build Next.js app
      working-directory: ./next
      run: yarn build
      env:
        NEXT_PUBLIC_STRAPI_URL: ${{ secrets.NEXT_PUBLIC_STRAPI_URL }}

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./next
        vercel-args: ${{ github.ref == 'refs/heads/main' && '--prod' || '--preview' }}

  notify:
    runs-on: ubuntu-latest
    needs: [deploy-strapi, deploy-nextjs]
    if: always()
    
    steps:
    - name: Notify deployment status
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ needs.deploy-strapi.result == 'success' && needs.deploy-nextjs.result == 'success' && 'success' || 'failure' }}
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        text: |
          üöÄ Full deployment completed!
          - Strapi: ${{ needs.deploy-strapi.result }}
          - Next.js: ${{ needs.deploy-nextjs.result }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 