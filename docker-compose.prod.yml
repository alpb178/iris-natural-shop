version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: launchpad_postgres_prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - launchpad_network_prod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME}"]
      interval: 30s
      timeout: 10s
      retries: 3

  strapi:
    build:
      context: ./strapi
      dockerfile: Dockerfile
    container_name: launchpad_strapi_prod
    restart: unless-stopped
    ports:
      - "1337:1337"
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SSL: false
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      NODE_ENV: production
      PORT: 1337
      HOST: 0.0.0.0
    volumes:
      - strapi_uploads:/srv/app/public/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - launchpad_network_prod

  nginx:
    image: nginx:alpine
    container_name: launchpad_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - strapi
    networks:
      - launchpad_network_prod

volumes:
  postgres_data_prod:
  strapi_uploads:

networks:
  launchpad_network_prod:
    driver: bridge
